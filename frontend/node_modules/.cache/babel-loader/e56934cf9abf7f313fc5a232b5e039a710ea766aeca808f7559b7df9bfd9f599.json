{"ast":null,"code":"var _jsxFileName = \"/Users/sagaramichihiro/diet-maker/frontend/src/components/Home/Body/Calender/Calender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // ReactとuseStateフックをインポート\nimport Calendar from 'react-calendar'; // react-calendarコンポーネントをインポート\nimport 'react-calendar/dist/Calendar.css'; // カレンダーのデフォルトCSSファイルをインポート\nimport './Calender.css'; // カスタムCSSファイルをインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calender() {\n  _s();\n  // 日付の状態を管理するためのuseStateフックを使用\n  const [date, setDate] = useState(new Date());\n\n  // カレンダーの日付が変更されたときに呼び出される関数\n  const onChange = newDate => {\n    setDate(newDate); // 状態を新しい日付に更新\n  };\n\n  // カスタムレンダリング関数\n  const tileClassName = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const day = date.getDay();\n      if (day === 0) {\n        return 'react-calendar__tile--sunday';\n      } else if (day === 6) {\n        return 'react-calendar__tile--saturday';\n      }\n    }\n    return null;\n  };\n\n  // 曜日の表示をカスタマイズ\n  const formatShortWeekday = (locale, date) => {\n    const weekdays = ['日', '月', '火', '水', '木', '金', '土'];\n    return weekdays[date.getDay()];\n  };\n\n  // 日付の表示をカスタマイズ\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: date.getDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: date,\n      tileClassName: tileClassName,\n      formatShortWeekday: formatShortWeekday,\n      tileContent: ({\n        date,\n        view\n      }) => view === 'month' && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: date.getDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Calender, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n_c = Calender;\nexport default Calender; // Calenderコンポーネントをエクスポート\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","Calender","_s","date","setDate","Date","onChange","newDate","tileClassName","view","day","getDay","formatShortWeekday","locale","weekdays","tileContent","children","getDate","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["/Users/sagaramichihiro/diet-maker/frontend/src/components/Home/Body/Calender/Calender.jsx"],"sourcesContent":["import React, { useState } from 'react'; // ReactとuseStateフックをインポート\nimport Calendar from 'react-calendar'; // react-calendarコンポーネントをインポート\nimport 'react-calendar/dist/Calendar.css'; // カレンダーのデフォルトCSSファイルをインポート\nimport './Calender.css'; // カスタムCSSファイルをインポート\n\nfunction Calender() {\n  // 日付の状態を管理するためのuseStateフックを使用\n  const [date, setDate] = useState(new Date());\n\n  // カレンダーの日付が変更されたときに呼び出される関数\n  const onChange = (newDate) => {\n    setDate(newDate); // 状態を新しい日付に更新\n  };\n\n  // カスタムレンダリング関数\n  const tileClassName = ({ date, view }) => {\n    if (view === 'month') {\n      const day = date.getDay();\n      if (day === 0) {\n        return 'react-calendar__tile--sunday';\n      } else if (day === 6) {\n        return 'react-calendar__tile--saturday';\n      }\n    }\n    return null;\n  };\n\n  // 曜日の表示をカスタマイズ\n  const formatShortWeekday = (locale, date) => {\n    const weekdays = ['日', '月', '火', '水', '木', '金', '土'];\n    return weekdays[date.getDay()];\n  };\n\n  // 日付の表示をカスタマイズ\n  const tileContent = ({ date, view }) => {\n    if (view === 'month') {\n      return <span>{date.getDate()}</span>;\n    }\n    return null;\n  };\n\n  return (\n    <div>\n      {/* カレンダーコンポーネントを表示し、onChangeとvalueプロパティを設定 */}\n      <Calendar\n        onChange={onChange}\n        value={date}\n        tileClassName={tileClassName}\n        formatShortWeekday={formatShortWeekday}\n        tileContent={({ date, view }) => view === 'month' && <span>{date.getDate()}</span>}\n      />\n    </div>\n  );\n}\n\nexport default Calender; // Calenderコンポーネントをエクスポート"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,QAAQ,MAAM,gBAAgB,CAAC,CAAC;AACvC,OAAO,kCAAkC,CAAC,CAAC;AAC3C,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMC,QAAQ,GAAIC,OAAO,IAAK;IAC5BH,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC;EACpB,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAC;IAAEL,IAAI;IAAEM;EAAK,CAAC,KAAK;IACxC,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,MAAMC,GAAG,GAAGP,IAAI,CAACQ,MAAM,CAAC,CAAC;MACzB,IAAID,GAAG,KAAK,CAAC,EAAE;QACb,OAAO,8BAA8B;MACvC,CAAC,MAAM,IAAIA,GAAG,KAAK,CAAC,EAAE;QACpB,OAAO,gCAAgC;MACzC;IACF;IACA,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAGA,CAACC,MAAM,EAAEV,IAAI,KAAK;IAC3C,MAAMW,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACpD,OAAOA,QAAQ,CAACX,IAAI,CAACQ,MAAM,CAAC,CAAC,CAAC;EAChC,CAAC;;EAED;EACA,MAAMI,WAAW,GAAGA,CAAC;IAAEZ,IAAI;IAAEM;EAAK,CAAC,KAAK;IACtC,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,oBAAOT,OAAA;QAAAgB,QAAA,EAAOb,IAAI,CAACc,OAAO,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IACtC;IACA,OAAO,IAAI;EACb,CAAC;EAED,oBACErB,OAAA;IAAAgB,QAAA,eAEEhB,OAAA,CAACF,QAAQ;MACPQ,QAAQ,EAAEA,QAAS;MACnBgB,KAAK,EAAEnB,IAAK;MACZK,aAAa,EAAEA,aAAc;MAC7BI,kBAAkB,EAAEA,kBAAmB;MACvCG,WAAW,EAAEA,CAAC;QAAEZ,IAAI;QAAEM;MAAK,CAAC,KAAKA,IAAI,KAAK,OAAO,iBAAIT,OAAA;QAAAgB,QAAA,EAAOb,IAAI,CAACc,OAAO,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CAhDQD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAkDjB,eAAeA,QAAQ,CAAC,CAAC;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}