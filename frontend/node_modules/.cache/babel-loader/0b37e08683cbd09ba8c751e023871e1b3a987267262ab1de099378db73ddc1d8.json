{"ast":null,"code":"var _jsxFileName = \"/Users/sagaramichihiro/diet-maker/frontend/src/components/Home/Body/TrainingRecord/TrainingTable/TrainingRecord.jsx\",\n  _s = $RefreshSig$();\n// このコードは、トレーニング記録全体を管理および表示するためのコンポーネントです。\n// トレーニングの基本情報、セットの詳細、モーダルを使用した入力補助機能を提供します。\n\nimport React, { useState } from \"react\";\nimport './styles/training-record-container.css';\nimport TrainingInfo from '../TrainingInfo/TrainingInfo';\nimport TrainingTable from './TrainingTable';\nimport Modal from '../Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainingRecord = () => {\n  _s();\n  // トレーニングのセット情報を管理する状態\n  const [sets, setSets] = useState([{\n    weight: 85,\n    reps: 5,\n    complete: false,\n    timer: \"02:00\"\n  }, {\n    weight: 85,\n    reps: 5,\n    complete: false,\n    timer: \"02:00\"\n  }, {\n    weight: 85,\n    reps: 5,\n    complete: false,\n    timer: \"02:00\"\n  }]);\n\n  // モーダルの表示状態を管理する状態\n  const [modalVisible, setModalVisible] = useState(false);\n  // 現在編集中のセットのインデックスを管理する状態\n  const [currentSet, setCurrentSet] = useState(null);\n  // 現在編集中のフィールド名を管理する状態\n  const [currentField, setCurrentField] = useState(\"\");\n  // 現在編集中の値を管理する状態\n  const [currentValue, setCurrentValue] = useState(\"\");\n\n  // 新しいセットを追加する関数\n  const handleAddSet = () => {\n    const lastSet = sets[sets.length - 1]; // 前回のセットを取得\n    const newSet = {\n      weight: lastSet ? lastSet.weight : 85,\n      reps: lastSet ? lastSet.reps : 5,\n      complete: false,\n      timer: lastSet ? lastSet.timer : \"02:00\"\n    };\n    setSets([...sets, newSet]);\n  };\n\n  // 指定されたインデックスのセットを削除する関数\n  const handleRemoveSet = index => {\n    const updatedSets = sets.filter((_, i) => i !== index);\n    setSets(updatedSets);\n  };\n\n  // 指定されたインデックスのセットのフィールドを更新する関数\n  const handleUpdateSet = (index, field, value) => {\n    const updatedSets = sets.map((set, i) => i === index ? {\n      ...set,\n      [field]: value\n    } : set);\n    setSets(updatedSets);\n  };\n\n  // モーダルを開く関数\n  const openModal = (index, field, value) => {\n    setCurrentSet(index);\n    setCurrentField(field);\n    setCurrentValue(value);\n    setModalVisible(true);\n  };\n\n  // モーダルを閉じる関数\n  const closeModal = () => {\n    setModalVisible(false);\n  };\n\n  // モーダルの保存ボタンがクリックされたときの処理\n  const handleModalSave = () => {\n    handleUpdateSet(currentSet, currentField, currentValue);\n    closeModal();\n  };\n\n  // モーダルの外側がクリックされたときの処理\n  const handleClickOutside = event => {\n    if (event.target.className === \"modal\") {\n      closeModal();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"training-record-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"training-record-title\",\n      children: \"\\u30C8\\u30EC\\u30FC\\u30CB\\u30F3\\u30B0\\u8A18\\u9332 : 12\\u670815\\u65E5\\uFF08\\u6728\\uFF09\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TrainingInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TrainingTable, {\n      sets: sets,\n      openModal: openModal,\n      handleUpdateSet: handleUpdateSet,\n      handleRemoveSet: handleRemoveSet,\n      handleAddSet: handleAddSet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n      currentField: currentField,\n      currentValue: currentValue,\n      setCurrentValue: setCurrentValue,\n      handleModalSave: handleModalSave,\n      handleClickOutside: handleClickOutside\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(TrainingRecord, \"yNms3wYfD7/VNulOHupbmf4rfw0=\");\n_c = TrainingRecord;\nexport default TrainingRecord;\nvar _c;\n$RefreshReg$(_c, \"TrainingRecord\");","map":{"version":3,"names":["React","useState","TrainingInfo","TrainingTable","Modal","jsxDEV","_jsxDEV","TrainingRecord","_s","sets","setSets","weight","reps","complete","timer","modalVisible","setModalVisible","currentSet","setCurrentSet","currentField","setCurrentField","currentValue","setCurrentValue","handleAddSet","lastSet","length","newSet","handleRemoveSet","index","updatedSets","filter","_","i","handleUpdateSet","field","value","map","set","openModal","closeModal","handleModalSave","handleClickOutside","event","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sagaramichihiro/diet-maker/frontend/src/components/Home/Body/TrainingRecord/TrainingTable/TrainingRecord.jsx"],"sourcesContent":["// このコードは、トレーニング記録全体を管理および表示するためのコンポーネントです。\n// トレーニングの基本情報、セットの詳細、モーダルを使用した入力補助機能を提供します。\n\nimport React, { useState } from \"react\";\nimport './styles/training-record-container.css';\nimport TrainingInfo from '../TrainingInfo/TrainingInfo';\nimport TrainingTable from './TrainingTable';\nimport Modal from '../Modal/Modal';\n\nconst TrainingRecord = () => {\n  // トレーニングのセット情報を管理する状態\n  const [sets, setSets] = useState([\n    { weight: 85, reps: 5, complete: false, timer: \"02:00\" },\n    { weight: 85, reps: 5, complete: false, timer: \"02:00\" },\n    { weight: 85, reps: 5, complete: false, timer: \"02:00\" },\n  ]);\n\n  // モーダルの表示状態を管理する状態\n  const [modalVisible, setModalVisible] = useState(false);\n  // 現在編集中のセットのインデックスを管理する状態\n  const [currentSet, setCurrentSet] = useState(null);\n  // 現在編集中のフィールド名を管理する状態\n  const [currentField, setCurrentField] = useState(\"\");\n  // 現在編集中の値を管理する状態\n  const [currentValue, setCurrentValue] = useState(\"\");\n\n  // 新しいセットを追加する関数\n  const handleAddSet = () => {\n    const lastSet = sets[sets.length - 1]; // 前回のセットを取得\n    const newSet = {\n      weight: lastSet ? lastSet.weight : 85,\n      reps: lastSet ? lastSet.reps : 5,\n      complete: false,\n      timer: lastSet ? lastSet.timer : \"02:00\"\n    };\n    setSets([...sets, newSet]);\n  };\n\n  // 指定されたインデックスのセットを削除する関数\n  const handleRemoveSet = (index) => {\n    const updatedSets = sets.filter((_, i) => i !== index);\n    setSets(updatedSets);\n  };\n\n  // 指定されたインデックスのセットのフィールドを更新する関数\n  const handleUpdateSet = (index, field, value) => {\n    const updatedSets = sets.map((set, i) =>\n      i === index ? { ...set, [field]: value } : set\n    );\n    setSets(updatedSets);\n  };\n\n  // モーダルを開く関数\n  const openModal = (index, field, value) => {\n    setCurrentSet(index);\n    setCurrentField(field);\n    setCurrentValue(value);\n    setModalVisible(true);\n  };\n\n  // モーダルを閉じる関数\n  const closeModal = () => {\n    setModalVisible(false);\n  };\n\n  // モーダルの保存ボタンがクリックされたときの処理\n  const handleModalSave = () => {\n    handleUpdateSet(currentSet, currentField, currentValue);\n    closeModal();\n  };\n\n  // モーダルの外側がクリックされたときの処理\n  const handleClickOutside = (event) => {\n    if (event.target.className === \"modal\") {\n      closeModal();\n    }\n  };\n\n  return (\n    <div className=\"training-record-container\">\n      <h2 className=\"training-record-title\">トレーニング記録 : 12月15日（木）</h2>\n      {/* トレーニングの基本情報を表示 */}\n      <TrainingInfo />\n      {/* トレーニングのセット情報を表示 */}\n      <TrainingTable\n        sets={sets}\n        openModal={openModal}\n        handleUpdateSet={handleUpdateSet}\n        handleRemoveSet={handleRemoveSet}\n        handleAddSet={handleAddSet}\n      />\n      {/* モーダルが表示されている場合 */}\n      {modalVisible && (\n        <Modal\n          currentField={currentField}\n          currentValue={currentValue}\n          setCurrentValue={setCurrentValue}\n          handleModalSave={handleModalSave}\n          handleClickOutside={handleClickOutside}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TrainingRecord;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}