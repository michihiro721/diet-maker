{"ast":null,"code":"var _jsxFileName = \"/Users/sagaramichihiro/diet-maker/frontend/src/components/Home/Body/TrainingRecord/TrainingTableRow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AlertFunction from '../Common/AlertFunction';\nimport './styles/training-table-row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainingTableRow = ({\n  index,\n  set,\n  openModal,\n  handleUpdateSet,\n  handleRemoveSet\n}) => {\n  _s();\n  const [showAlert, setShowAlert] = useState(false);\n  const handleCompleteClick = () => {\n    handleUpdateSet(index, \"complete\", !set.complete);\n    if (!set.complete) {\n      setShowAlert(true);\n    }\n  };\n  const handleAlertComplete = () => {\n    setShowAlert(false);\n  };\n  const updateTimer = newTime => {\n    const minutes = Math.floor(newTime / 60);\n    const seconds = newTime % 60;\n    const formattedTime = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    handleUpdateSet(index, \"timer\", formattedTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: set.weight,\n        onClick: () => openModal(index, \"weight\", set.weight),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: set.reps,\n        onClick: () => openModal(index, \"reps\", set.reps),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: set.timer,\n        onClick: () => openModal(index, \"timer\", set.timer),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCompleteClick,\n        className: set.complete ? \"complete-button\" : \"incomplete-button\",\n        children: set.complete ? \"レ\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertFunction, {\n        timer: parseInt(set.timer.split(':').reduce((acc, time) => 60 * acc + +time)),\n        onComplete: handleAlertComplete,\n        updateTimer: updateTimer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRemoveSet(index),\n        className: \"delete-button\",\n        children: \"\\u524A\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TrainingTableRow, \"10vQU8F2+7kcs4/9wLfMdWKVXrU=\");\n_c = TrainingTableRow;\nexport default TrainingTableRow;\nvar _c;\n$RefreshReg$(_c, \"TrainingTableRow\");","map":{"version":3,"names":["React","useState","AlertFunction","jsxDEV","_jsxDEV","TrainingTableRow","index","set","openModal","handleUpdateSet","handleRemoveSet","_s","showAlert","setShowAlert","handleCompleteClick","complete","handleAlertComplete","updateTimer","newTime","minutes","Math","floor","seconds","formattedTime","String","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","weight","onClick","readOnly","reps","timer","className","parseInt","split","reduce","acc","time","onComplete","_c","$RefreshReg$"],"sources":["/Users/sagaramichihiro/diet-maker/frontend/src/components/Home/Body/TrainingRecord/TrainingTableRow.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport AlertFunction from '../Common/AlertFunction';\nimport './styles/training-table-row.css';\n\nconst TrainingTableRow = ({ index, set, openModal, handleUpdateSet, handleRemoveSet }) => {\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleCompleteClick = () => {\n    handleUpdateSet(index, \"complete\", !set.complete);\n    if (!set.complete) {\n      setShowAlert(true);\n    }\n  };\n\n  const handleAlertComplete = () => {\n    setShowAlert(false);\n  };\n\n  const updateTimer = (newTime) => {\n    const minutes = Math.floor(newTime / 60);\n    const seconds = newTime % 60;\n    const formattedTime = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    handleUpdateSet(index, \"timer\", formattedTime);\n  };\n\n  return (\n    <tr>\n      <td>{index + 1}</td>\n      <td>\n        <input\n          type=\"number\"\n          value={set.weight}\n          onClick={() => openModal(index, \"weight\", set.weight)}\n          readOnly\n        />\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          value={set.reps}\n          onClick={() => openModal(index, \"reps\", set.reps)}\n          readOnly\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          value={set.timer}\n          onClick={() => openModal(index, \"timer\", set.timer)}\n          readOnly\n        />\n      </td>\n      <td>\n        <button\n          onClick={handleCompleteClick}\n          className={set.complete ? \"complete-button\" : \"incomplete-button\"}\n        >\n          {set.complete ? \"レ\" : \"\"}\n        </button>\n        {showAlert && <AlertFunction timer={parseInt(set.timer.split(':').reduce((acc, time) => (60 * acc) + +time))} onComplete={handleAlertComplete} updateTimer={updateTimer} />}\n      </td>\n      <td>\n        <button\n          onClick={() => handleRemoveSet(index)}\n          className=\"delete-button\"\n        >\n          削除\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default TrainingTableRow;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,KAAK;EAAEC,GAAG;EAAEC,SAAS;EAAEC,eAAe;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,mBAAmB,GAAGA,CAAA,KAAM;IAChCL,eAAe,CAACH,KAAK,EAAE,UAAU,EAAE,CAACC,GAAG,CAACQ,QAAQ,CAAC;IACjD,IAAI,CAACR,GAAG,CAACQ,QAAQ,EAAE;MACjBF,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChCH,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMI,WAAW,GAAIC,OAAO,IAAK;IAC/B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,OAAO,GAAGJ,OAAO,GAAG,EAAE;IAC5B,MAAMK,aAAa,GAAG,GAAGC,MAAM,CAACL,OAAO,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IAC/FhB,eAAe,CAACH,KAAK,EAAE,OAAO,EAAEiB,aAAa,CAAC;EAChD,CAAC;EAED,oBACEnB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAKpB,KAAK,GAAG;IAAC;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpB1B,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QACE2B,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAEzB,GAAG,CAAC0B,MAAO;QAClBC,OAAO,EAAEA,CAAA,KAAM1B,SAAS,CAACF,KAAK,EAAE,QAAQ,EAAEC,GAAG,CAAC0B,MAAM,CAAE;QACtDE,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL1B,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QACE2B,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAEzB,GAAG,CAAC6B,IAAK;QAChBF,OAAO,EAAEA,CAAA,KAAM1B,SAAS,CAACF,KAAK,EAAE,MAAM,EAAEC,GAAG,CAAC6B,IAAI,CAAE;QAClDD,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL1B,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEzB,GAAG,CAAC8B,KAAM;QACjBH,OAAO,EAAEA,CAAA,KAAM1B,SAAS,CAACF,KAAK,EAAE,OAAO,EAAEC,GAAG,CAAC8B,KAAK,CAAE;QACpDF,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL1B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QACE8B,OAAO,EAAEpB,mBAAoB;QAC7BwB,SAAS,EAAE/B,GAAG,CAACQ,QAAQ,GAAG,iBAAiB,GAAG,mBAAoB;QAAAW,QAAA,EAEjEnB,GAAG,CAACQ,QAAQ,GAAG,GAAG,GAAG;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,EACRlB,SAAS,iBAAIR,OAAA,CAACF,aAAa;QAACmC,KAAK,EAAEE,QAAQ,CAAChC,GAAG,CAAC8B,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAM,EAAE,GAAGD,GAAG,GAAI,CAACC,IAAI,CAAC,CAAE;QAACC,UAAU,EAAE5B,mBAAoB;QAACC,WAAW,EAAEA;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzK,CAAC,eACL1B,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QACE8B,OAAO,EAAEA,CAAA,KAAMxB,eAAe,CAACJ,KAAK,CAAE;QACtCgC,SAAS,EAAC,eAAe;QAAAZ,QAAA,EAC1B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET,CAAC;AAACnB,EAAA,CAnEIN,gBAAgB;AAAAwC,EAAA,GAAhBxC,gBAAgB;AAqEtB,eAAeA,gBAAgB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}