{"ast":null,"code":"var _jsxFileName = \"/Users/sagaramichihiro/diet-maker/frontend/src/components/Home/Body/TrainingRecord/TimerButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AlertFunction from './AlertFunction';\nimport './sttimer-button.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TimerButton = ({\n  index,\n  set,\n  handleUpdateSet\n}) => {\n  _s();\n  const [showAlert, setShowAlert] = useState(false);\n  const [resetTimer, setResetTimer] = useState(false);\n\n  // 完了ボタンがクリックされたときの処理\n  const handleCompleteClick = () => {\n    if (set.complete) {\n      // タイマーをリセットする\n      setResetTimer(true);\n      setShowAlert(false);\n    } else {\n      // タイマーを開始する\n      setShowAlert(true);\n      setResetTimer(false);\n    }\n    // セットの完了状態を更新する\n    handleUpdateSet(index, \"complete\", !set.complete);\n  };\n\n  // タイマーが完了したときの処理\n  const handleAlertComplete = () => {\n    setShowAlert(false);\n  };\n\n  // タイマーの値を更新する関数\n  const updateTimer = newTime => {\n    const minutes = Math.floor(newTime / 60);\n    const seconds = newTime % 60;\n    const formattedTime = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    handleUpdateSet(index, \"timer\", formattedTime);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCompleteClick,\n      className: `timer-button ${set.complete ? \"complete-button\" : \"incomplete-button\"}`,\n      children: set.complete ? \"レ\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertFunction, {\n      timer: parseInt(set.timer.split(':').reduce((acc, time) => 60 * acc + +time)),\n      onComplete: handleAlertComplete,\n      updateTimer: updateTimer,\n      reset: resetTimer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-display\",\n      children: set.timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TimerButton, \"vjJZTBALAfPRbkf3dTomvS7eFoE=\");\n_c = TimerButton;\nexport default TimerButton;\nvar _c;\n$RefreshReg$(_c, \"TimerButton\");","map":{"version":3,"names":["React","useState","AlertFunction","jsxDEV","_jsxDEV","Fragment","_Fragment","TimerButton","index","set","handleUpdateSet","_s","showAlert","setShowAlert","resetTimer","setResetTimer","handleCompleteClick","complete","handleAlertComplete","updateTimer","newTime","minutes","Math","floor","seconds","formattedTime","String","padStart","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","timer","parseInt","split","reduce","acc","time","onComplete","reset","_c","$RefreshReg$"],"sources":["/Users/sagaramichihiro/diet-maker/frontend/src/components/Home/Body/TrainingRecord/TimerButton.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport AlertFunction from './AlertFunction';\nimport './sttimer-button.css';\n\nconst TimerButton = ({ index, set, handleUpdateSet }) => {\n  const [showAlert, setShowAlert] = useState(false);\n  const [resetTimer, setResetTimer] = useState(false);\n\n  // 完了ボタンがクリックされたときの処理\n  const handleCompleteClick = () => {\n    if (set.complete) {\n      // タイマーをリセットする\n      setResetTimer(true);\n      setShowAlert(false);\n    } else {\n      // タイマーを開始する\n      setShowAlert(true);\n      setResetTimer(false);\n    }\n    // セットの完了状態を更新する\n    handleUpdateSet(index, \"complete\", !set.complete);\n  };\n\n  // タイマーが完了したときの処理\n  const handleAlertComplete = () => {\n    setShowAlert(false);\n  };\n\n  // タイマーの値を更新する関数\n  const updateTimer = (newTime) => {\n    const minutes = Math.floor(newTime / 60);\n    const seconds = newTime % 60;\n    const formattedTime = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    handleUpdateSet(index, \"timer\", formattedTime);\n  };\n\n  return (\n    <>\n      <button\n        onClick={handleCompleteClick}\n        className={`timer-button ${set.complete ? \"complete-button\" : \"incomplete-button\"}`}\n      >\n        {set.complete ? \"レ\" : \"\"}\n      </button>\n      {showAlert && (\n        <AlertFunction\n          timer={parseInt(set.timer.split(':').reduce((acc, time) => (60 * acc) + +time))}\n          onComplete={handleAlertComplete}\n          updateTimer={updateTimer}\n          reset={resetTimer}\n        />\n      )}\n      <div className=\"timer-display\">\n        {set.timer}\n      </div>\n    </>\n  );\n};\n\nexport default TimerButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,GAAG;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMe,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIP,GAAG,CAACQ,QAAQ,EAAE;MAChB;MACAF,aAAa,CAAC,IAAI,CAAC;MACnBF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACL;MACAA,YAAY,CAAC,IAAI,CAAC;MAClBE,aAAa,CAAC,KAAK,CAAC;IACtB;IACA;IACAL,eAAe,CAACF,KAAK,EAAE,UAAU,EAAE,CAACC,GAAG,CAACQ,QAAQ,CAAC;EACnD,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCL,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMM,WAAW,GAAIC,OAAO,IAAK;IAC/B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,OAAO,GAAGJ,OAAO,GAAG,EAAE;IAC5B,MAAMK,aAAa,GAAG,GAAGC,MAAM,CAACL,OAAO,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IAC/FjB,eAAe,CAACF,KAAK,EAAE,OAAO,EAAEiB,aAAa,CAAC;EAChD,CAAC;EAED,oBACErB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA;MACEyB,OAAO,EAAEb,mBAAoB;MAC7Bc,SAAS,EAAE,gBAAgBrB,GAAG,CAACQ,QAAQ,GAAG,iBAAiB,GAAG,mBAAmB,EAAG;MAAAW,QAAA,EAEnFnB,GAAG,CAACQ,QAAQ,GAAG,GAAG,GAAG;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,EACRtB,SAAS,iBACRR,OAAA,CAACF,aAAa;MACZiC,KAAK,EAAEC,QAAQ,CAAC3B,GAAG,CAAC0B,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAM,EAAE,GAAGD,GAAG,GAAI,CAACC,IAAI,CAAC,CAAE;MAChFC,UAAU,EAAEvB,mBAAoB;MAChCC,WAAW,EAAEA,WAAY;MACzBuB,KAAK,EAAE5B;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACF,eACD9B,OAAA;MAAK0B,SAAS,EAAC,eAAe;MAAAF,QAAA,EAC3BnB,GAAG,CAAC0B;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACvB,EAAA,CArDIJ,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAuDjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}