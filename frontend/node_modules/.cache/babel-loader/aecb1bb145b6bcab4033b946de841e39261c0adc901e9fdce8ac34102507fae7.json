{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Home/Body/Calender/Calender.jsx\",\n  _s = $RefreshSig$();\n-maker / frontend / src / components / Home / Body / Calender / Calender.jsx;\nimport React, { useState } from 'react'; // ReactとuseStateフックをインポート\nimport Calendar from 'react-calendar'; // react-calendarコンポーネントをインポート\nimport 'react-calendar/dist/Calendar.css'; // カレンダーのデフォルトCSSファイルをインポート\nimport './Calender.css'; // カスタムCSSファイルをインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calender() {\n  _s();\n  // 日付の状態を管理するためのuseStateフックを使用\n  const [date, setDate] = useState(new Date());\n\n  // カレンダーの日付が変更されたときに呼び出される関数\n  const onChange = newDate => {\n    setDate(newDate); // 状態を新しい日付に更新\n  };\n\n  // カスタムレンダリング関数\n  const renderDay = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const day = date.getDay();\n      const dateNumber = date.getDate();\n      const className = day === 0 ? 'react-calendar__tile--sunday' : day === 6 ? 'react-calendar__tile--saturday' : '';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: dateNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  // カスタムレンダリング関数\n  const renderWeekday = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const weekdays = ['日', '月', '火', '水', '木', '金', '土'];\n      const day = date.getDay();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: weekdays[day]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: date,\n      tileContent: renderDay,\n      formatShortWeekday: (_, date) => renderWeekday({\n        date,\n        view: 'month'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Calender, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n_c = Calender;\nexport default Calender; // Calenderコンポーネントをエクスポート\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["maker","frontend","src","components","Home","Body","Calender","jsx","React","useState","Calendar","jsxDEV","_jsxDEV","_s","date","setDate","Date","onChange","newDate","renderDay","view","day","getDay","dateNumber","getDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderWeekday","weekdays","value","tileContent","formatShortWeekday","_","_c","$RefreshReg$"],"sources":["/app/src/components/Home/Body/Calender/Calender.jsx"],"sourcesContent":["-maker/frontend/src/components/Home/Body/Calender/Calender.jsx\nimport React, { useState } from 'react'; // ReactとuseStateフックをインポート\nimport Calendar from 'react-calendar'; // react-calendarコンポーネントをインポート\nimport 'react-calendar/dist/Calendar.css'; // カレンダーのデフォルトCSSファイルをインポート\nimport './Calender.css'; // カスタムCSSファイルをインポート\n\nfunction Calender() {\n  // 日付の状態を管理するためのuseStateフックを使用\n  const [date, setDate] = useState(new Date());\n\n  // カレンダーの日付が変更されたときに呼び出される関数\n  const onChange = (newDate) => {\n    setDate(newDate); // 状態を新しい日付に更新\n  };\n\n  // カスタムレンダリング関数\n  const renderDay = ({ date, view }) => {\n    if (view === 'month') {\n      const day = date.getDay();\n      const dateNumber = date.getDate();\n      const className = day === 0 ? 'react-calendar__tile--sunday' : day === 6 ? 'react-calendar__tile--saturday' : '';\n      return <div className={className}>{dateNumber}</div>;\n    }\n  };\n\n  // カスタムレンダリング関数\n  const renderWeekday = ({ date, view }) => {\n    if (view === 'month') {\n      const weekdays = ['日', '月', '火', '水', '木', '金', '土'];\n      const day = date.getDay();\n      return <div>{weekdays[day]}</div>;\n    }\n  };\n\n  return (\n    <div>\n      {/* カレンダーコンポーネントを表示し、onChangeとvalueプロパティを設定 */}\n      <Calendar\n        onChange={onChange}\n        value={date}\n        tileContent={renderDay}\n        formatShortWeekday={(_, date) => renderWeekday({ date, view: 'month' })}\n      />\n    </div>\n  );\n}\n\nexport default Calender; // Calenderコンポーネントをエクスポート"],"mappings":";;AAAA,CAACA,KAAK,GAACC,QAAQ,GAACC,GAAG,GAACC,UAAU,GAACC,IAAI,GAACC,IAAI,GAACC,QAAQ,GAACA,QAAQ,CAACC,GAAG;AAC9D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,QAAQ,MAAM,gBAAgB,CAAC,CAAC;AACvC,OAAO,kCAAkC,CAAC,CAAC;AAC3C,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASN,QAAQA,CAAA,EAAG;EAAAO,EAAA;EAClB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAIO,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMC,QAAQ,GAAIC,OAAO,IAAK;IAC5BH,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC;EACpB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGA,CAAC;IAAEL,IAAI;IAAEM;EAAK,CAAC,KAAK;IACpC,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,MAAMC,GAAG,GAAGP,IAAI,CAACQ,MAAM,CAAC,CAAC;MACzB,MAAMC,UAAU,GAAGT,IAAI,CAACU,OAAO,CAAC,CAAC;MACjC,MAAMC,SAAS,GAAGJ,GAAG,KAAK,CAAC,GAAG,8BAA8B,GAAGA,GAAG,KAAK,CAAC,GAAG,gCAAgC,GAAG,EAAE;MAChH,oBAAOT,OAAA;QAAKa,SAAS,EAAEA,SAAU;QAAAC,QAAA,EAAEH;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAC;IAAEjB,IAAI;IAAEM;EAAK,CAAC,KAAK;IACxC,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,MAAMY,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACpD,MAAMX,GAAG,GAAGP,IAAI,CAACQ,MAAM,CAAC,CAAC;MACzB,oBAAOV,OAAA;QAAAc,QAAA,EAAMM,QAAQ,CAACX,GAAG;MAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACnC;EACF,CAAC;EAED,oBACElB,OAAA;IAAAc,QAAA,eAEEd,OAAA,CAACF,QAAQ;MACPO,QAAQ,EAAEA,QAAS;MACnBgB,KAAK,EAAEnB,IAAK;MACZoB,WAAW,EAAEf,SAAU;MACvBgB,kBAAkB,EAAEA,CAACC,CAAC,EAAEtB,IAAI,KAAKiB,aAAa,CAAC;QAAEjB,IAAI;QAAEM,IAAI,EAAE;MAAQ,CAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CAvCQP,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAyCjB,eAAeA,QAAQ,CAAC,CAAC;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}